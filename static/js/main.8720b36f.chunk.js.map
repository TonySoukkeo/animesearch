{"version":3,"sources":["components/homepage/TopAnime.js","components/homepage/TopManga.js","components/loading/Loading.js","components/homepage/HomePage.js","redux/reducers/actions/AnimeActions.js","redux/reducers/actions/AnimeTypes.js","components/animeview/LeftHandView.js","components/animeview/RightHandView.js","components/animeview/Synopsis.js","components/animeview/reviews/carousel/Carousel.js","components/animeview/reviews/Reviews.js","redux/reducers/loading/LoadingActions.js","redux/reducers/loading/LoadingType.js","components/modal/Modal.js","components/animeview/RelatedAnime.js","components/animeview/AnimeView.js","redux/reducers/getTopAnimeReducer.js","redux/reducers/loading/LoadingReducer.js","redux/reducers/index.js","redux/store.js","common/ScrollToTop.js","components/navigation/NavigationMobile.js","components/navigation/NavigationDesktop.js","components/homepage/AnimeSearch.js","components/homepage/SearchDisplay.js","components/animesearch/AnimeSearchPage.js","components/mangasearch/MangaSearch.js","components/mangasearch/MangaSearchPage.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["params","effect","grabCursor","centeredSlides","slidesPerView","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","type","pagination","el","navigation","nextEl","prevEl","TopAnime","_ref","topAnime","react_default","a","createElement","id","className","lib_default","Object","assign","shouldSwiperUpdate","map","anime","style","width","react_router_dom","to","concat","mal_id","src","image_url","alt","title","score","TopManga","topManga","Loading","padding","height","HomePage","_this$props","this","props","getTopAnime","getTopManga","_this$props2","Fragment","homepage_TopAnime","loading_Loading","homepage_TopManga","Component","actions","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","fetch","then","res","json","data","top","catch","err","console","log","sent","payload","stop","_x","apply","arguments","_ref2","_callee2","_context2","_x2","connect","state","getTop","LeftHandView","currentAnime","title_english","rating","class","status","episodes","RightHandView","trailer_url","genres","genre","name","Synopsis","synopsis","index","Carousel","reviews","openModal","index_es","naturalSlideWidth","naturalSlideHeight","totalSlides","length","visibleSlides","step","review","key","reviewer","username","scores","overall","story","animation","sound","character","enjoyment","onClick","content","cursor","data-target","data-toggle","Reviews","carousel_Carousel","loading","value","Modal","modalContent","userImg","userScore","resetModal","tabindex","role","aria-labelledby","aria-hidden","borderRadius","data-dismiss","aria-label","dangerouslySetInnerHTML","__html","RelatedAnime","animeRelated","fontWeight","AnimeView","replace","_this","setState","getAnimeDetails","getAnimeReview","match","split","prevProps","relatedAnime","related","values","forEach","arr","x","push","window","location","reload","resetAnimeProps","_this$props3","isLoading","_this$state","animeview_LeftHandView","animeview_RightHandView","animeview_Synopsis","reviews_Reviews","modal_Modal","animeview_RelatedAnime","_ref3","_callee3","url","_context3","_x3","_ref4","_callee4","_context4","_x4","items","_ref7","_callee7","i","_context7","_x7","initialState","animeSearch","mangaSearch","combineReducers","undefined","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","composeWithDevTools","applyMiddleware","ScrollToTop","pathname","scrollTo","children","withRouter","Navigation","href","aria-controls","aria-expanded","NavigationDesktop","AnimeSearch","searchValue","handleSearchChange","searchAnime","autoFocus","onChange","placeholder","SearchDisplay","searchedAnime","AnimeSearchPage","e","target","preventDefault","homepage_SearchDisplay","homepage_AnimeSearch","_ref5","_callee5","newAnimeStr","_context5","results","_x5","MangaSearch","searchManga","MangaSearchPage","searchedManga","mangasearch_MangaSearch","manga","_ref6","_callee6","newMangaStr","_context6","_x6","Footer","App","es","basename","common_ScrollToTop","navigation_NavigationDesktop","NavigationMobile","react_router","exact","path","component","footer_Footer","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8720b36f.chunk.js","sourcesContent":["import React from \"react\";\nimport Swiper from \"react-id-swiper\";\nimport { NavLink } from \"react-router-dom\";\n\n// Params for carousel swiper\nconst params = {\n  effect: \"coverflow\",\n  grabCursor: true,\n  centeredSlides: true,\n  slidesPerView: \"auto\",\n  coverflowEffect: {\n    rotate: 50,\n    stretch: 0,\n    depth: 100,\n    modifier: 1,\n    slideShadows: true,\n    type: \"none\"\n  },\n  pagination: {\n    el: \".swiper-pagination\",\n    type: \"fraction\"\n  },\n  navigation: {\n    nextEl: \".swiper-button-next\",\n    prevEl: \".swiper-button-prev\"\n  }\n};\n\nconst TopAnime = ({ topAnime }) => {\n  return (\n    <section id=\"trending-anime\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div id=\"top-anime\" className=\"row\">\n              <Swiper {...params} shouldSwiperUpdate>\n                {topAnime &&\n                  topAnime.map(anime => (\n                    <div style={{ width: \"40%\" }} className=\"card\">\n                      <NavLink\n                        className=\"nav-link\"\n                        to={`/anime/${anime.mal_id}_${anime.type}`}\n                      >\n                        <img\n                          src={anime.image_url}\n                          alt=\"\"\n                          className=\"anime-card-img\"\n                        />\n                      </NavLink>\n                      <div className=\"card-body\">\n                        <h6 className=\"card-title text-center font-weight-bold\">\n                          {anime.title}\n                        </h6>\n                        <p className=\"card-text text-right font-weight-bold\">\n                          Rating:{\" \"}\n                          <span className=\"font-weight-normal text-success\">\n                            {anime.score}\n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n              </Swiper>\n              <div className=\"top-anime-title\">\n                <h2 className=\"trending-header\">Top Anime</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TopAnime;\n","import React from \"react\";\nimport Swiper from \"react-id-swiper\";\nimport { NavLink } from \"react-router-dom\";\n\n// Params for carousel swiper\nconst params = {\n  effect: \"coverflow\",\n  grabCursor: true,\n  centeredSlides: true,\n  slidesPerView: \"auto\",\n  coverflowEffect: {\n    rotate: 50,\n    stretch: 0,\n    depth: 100,\n    modifier: 1,\n    slideShadows: true,\n    type: \"none\"\n  },\n  pagination: {\n    el: \".swiper-pagination\",\n    type: \"fraction\"\n  },\n  navigation: {\n    nextEl: \".swiper-button-next\",\n    prevEl: \".swiper-button-prev\"\n  }\n};\n\nconst TopManga = ({ topManga }) => {\n  return (\n    <section id=\"trending-manga\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"row\">\n              <Swiper {...params} shouldSwiperUpdate>\n                {topManga &&\n                  topManga.map(anime => (\n                    <div style={{ width: \"40%\" }} className=\"card\">\n                      <NavLink\n                        className=\"nav-link\"\n                        to={`/anime/${anime.mal_id}_${anime.type}`}\n                      >\n                        <img\n                          src={anime.image_url}\n                          alt=\"\"\n                          className=\"anime-card-img\"\n                        />\n                      </NavLink>\n                      <div className=\"card-body\">\n                        <h6 className=\"card-title text-center font-weight-bold\">\n                          {anime.title}\n                        </h6>\n                        <p className=\"card-text text-right font-weight-bold\">\n                          Rating:{\" \"}\n                          <span className=\"font-weight-normal text-success\">\n                            {anime.score}\n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n              </Swiper>\n              <div className=\"top-anime-title\">\n                <h2 className=\"trending-header\">Manga</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TopManga;\n","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div style={{ padding: \"100px 0\" }} className=\"m-auto\">\n          <img\n            style={{ height: \"200px\", width: \"200px\" }}\n            src=\"/assets/loading.gif\"\n            alt=\"Loading\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport {\n  getTopAnime,\n  getTopManga\n} from \"../../redux/reducers/actions/AnimeActions\";\nimport TopAnime from \"./TopAnime\";\nimport TopManga from \"./TopManga\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../loading/Loading\";\n\nclass HomePage extends Component {\n  componentDidMount() {\n    const { getTopAnime, getTopManga } = this.props;\n\n    // Get top anime\n    getTopAnime();\n\n    // Get top manga\n    getTopManga();\n  }\n\n  render() {\n    const { topAnime, topManga } = this.props;\n\n    return (\n      <React.Fragment>\n        {/** BANNER **/}\n        <div id=\"banner\">\n          <div id=\"overlay\" />\n        </div>\n        {/** TOP ANIME **/}\n        {!topAnime ? <Loading /> : <TopAnime topAnime={topAnime} />}\n\n        {/** TOP MANGA **/}\n        {!topManga ? <Loading /> : <TopManga topManga={topManga} />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  topAnime: state.getTop.topAnime,\n  topManga: state.getTop.topManga\n});\n\nconst actions = {\n  getTopAnime,\n  getTopManga\n};\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(HomePage);\n","import {\n  GET_TOP_ANIME,\n  GET_ANIME_DETAILS,\n  GET_TOP_MANGA,\n  GET_ANIME_REVIEWS,\n  SEARCH_ANIME,\n  SEARCH_MANGA,\n  RELATED_ANIME,\n  RESET_ANIME_PROPS\n} from \"./AnimeTypes\";\nimport { LOADING } from \"../loading/LoadingType\";\n\n// Get top anime for home page\nexport const getTopAnime = () => async dispatch => {\n  const url = \"https://api.jikan.moe/v3/top/anime/\",\n    topAnime = await fetch(url)\n      .then(res => res.json())\n      .then(data => data.top)\n      .catch(err => console.log(err));\n\n  dispatch({\n    type: GET_TOP_ANIME,\n    payload: topAnime\n  });\n};\n\n// Get top manga for homepage\nexport const getTopManga = () => async dispatch => {\n  const url = \"https://api.jikan.moe/v3/top/manga/\",\n    topManga = await fetch(url)\n      .then(res => res.json())\n      .then(data => data.top)\n      .catch(err => console.log(err));\n\n  dispatch({\n    type: GET_TOP_MANGA,\n    payload: topManga\n  });\n};\n\n// Get current anime details\nexport const getAnimeDetails = (id, type) => async dispatch => {\n  const url = `https://api.jikan.moe/v3/${type}/${id}`,\n    currentAnime = await fetch(url)\n      .then(res => res.json())\n      .then(data => data)\n      .catch(err => console.log(err));\n\n  dispatch({\n    type: GET_ANIME_DETAILS,\n    payload: currentAnime\n  });\n};\n\n// Get current anime episodes\nexport const getAnimeReview = (id, type) => async dispatch => {\n  const url = `https://api.jikan.moe/v3/${type}/${id}/reviews`,\n    reviews = await fetch(url)\n      .then(res => res.json())\n      .then(data => data.reviews)\n      .catch(err => console.log(err));\n\n  dispatch({\n    type: GET_ANIME_REVIEWS,\n    payload: reviews\n  });\n};\n\n// Search Anime\nexport const animeSearch = anime => async dispatch => {\n  // Reformat anime string\n  const newAnimeStr = anime.replace(/\\s/gi, \"%20\"),\n    url = `https://api.jikan.moe/v3/search/anime/?q=${newAnimeStr}&limit=30`,\n    animeSearch = await fetch(url)\n      .then(res => res.json())\n      .then(data => data.results)\n      .catch(err => console.log(err));\n\n  dispatch({\n    type: SEARCH_ANIME,\n    payload: animeSearch\n  });\n\n  // Set loading state to false\n  dispatch({\n    type: LOADING,\n    payload: false\n  });\n};\n\n// Search Manga\nexport const mangaSearch = manga => async dispatch => {\n  // Reformat anime string\n  const newMangaStr = manga.replace(/\\s/gi, \"%20\"),\n    url = `https://api.jikan.moe/v3/search/manga/?q=${newMangaStr}&limit=30`,\n    mangaSearch = await fetch(url)\n      .then(res => res.json())\n      .then(data => data.results)\n      .catch(err => console.log(err));\n\n  dispatch({\n    type: SEARCH_MANGA,\n    payload: mangaSearch\n  });\n\n  // Set loading state to false\n  dispatch({\n    type: LOADING,\n    payload: false\n  });\n};\n\n// Get related anime for current anime\nexport const relatedAnime = items => async dispatch => {\n  const related = [];\n  // Loop through array and do an api to each obj\n  for (let i = 0; i < items.length; i++) {\n    const anime = await fetch(\n      `https://api.jikan.moe/v3/${items[i].type}/${items[i].id}`\n    )\n      .then(res => res.json())\n      .then(data => data);\n    related.push(anime);\n  }\n  dispatch({\n    type: RELATED_ANIME,\n    payload: related\n  });\n\n  dispatch({\n    type: LOADING,\n    payload: false\n  });\n};\n\n// Reset anime props when component unmounts\nexport const resetAnimeProps = () => dispatch => {\n  dispatch({\n    type: RESET_ANIME_PROPS,\n    payload: []\n  });\n};\n","export const GET_TOP_ANIME = \"GET_TOP_ANIME\";\nexport const GET_TOP_MANGA = \"GET_TOP_MANGA\";\nexport const GET_ANIME_DETAILS = \"GET_ANIME_DETAILS\";\nexport const GET_ANIME_REVIEWS = \"GET_ANIME_REVIEWS\";\nexport const SEARCH_ANIME = \"SEARCH_ANIME\";\nexport const SEARCH_MANGA = \"SEARCH_MANGA\";\nexport const RELATED_ANIME = \"RELATED_ANIME\";\nexport const RESET_ANIME_PROPS = \"RESET_ANIME_PROPS\";\n","import React from \"react\";\n\nconst LeftHandView = ({ currentAnime }) => {\n  return (\n    <div id=\"anime-left-display\" className=\"col-lg-5\">\n      <div className=\"card\">\n        <img\n          className=\"anime-view-card\"\n          src={currentAnime.image_url}\n          alt={currentAnime.title_english}\n        />\n        <div className=\"card-body\">\n          <div className=\"card-title text-center font-weight-bold\">\n            {currentAnime.title_english || currentAnime.title}\n          </div>\n          <p className=\"text-center text-success\">{currentAnime.rating}</p>\n          <p className=\"card-text\">\n            <span class=\"font-weight-bold\">Type:</span> {currentAnime.type}\n          </p>\n          <p className=\"card-text\">\n            <span className=\"font-weight-bold\">Airing:</span>{\" \"}\n            {currentAnime.status}\n          </p>\n          <p className=\"card-text\">\n            <span className=\"font-weight-bold\">Episodes:</span>{\" \"}\n            {currentAnime.episodes || \"NA\"}\n          </p>\n          <p className=\"card-text\">\n            <span className=\"font-weight-bold\">Rating:</span>{\" \"}\n            {currentAnime.score}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LeftHandView;\n","import React from \"react\";\n\nconst RightHandView = ({ currentAnime }) => {\n  return (\n    <div className=\"col-lg-7\">\n      {/** TRAILER **/}\n      <div id=\"trailer\">\n        {!currentAnime.trailer_url ? (\n          <div>No Trailer to show</div>\n        ) : (\n          <iFrame\n            src={currentAnime.trailer_url + `?autoplay=0&rel=0`}\n            height=\"400\"\n            width=\"100%\"\n          />\n        )}\n      </div>\n      {/** GENRES **/}\n      <section id=\"genres\">\n        {currentAnime.genres &&\n          currentAnime.genres.map(genre => (\n            <span className=\"badge badge-info mr-3 mb-3 py-3 px-4\">\n              {genre.name}\n            </span>\n          ))}\n      </section>\n    </div>\n  );\n};\n\nexport default RightHandView;\n","import React from \"react\";\n\nconst Synopsis = ({ currentAnime }) => {\n  return (\n    <section id=\"anime-synopsis\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h1 className=\"text-center\">Synopsis</h1>\n            <div className=\"bottom-border\" />\n            <p>{currentAnime.synopsis}</p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Synopsis;\n","import React from \"react\";\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n  ButtonBack,\n  ButtonNext\n} from \"pure-react-carousel\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\n\n// Index counter for carousel\nlet index = 0;\n\nconst Carousel = ({ reviews, openModal }) => {\n  return (\n    <React.Fragment>\n      {/** Mobile View **/}\n      <CarouselProvider\n        className=\"review-carousel-width d-block d-lg-none\"\n        naturalSlideWidth={500}\n        naturalSlideHeight={1500}\n        totalSlides={reviews && reviews.length}\n        visibleSlides={3}\n        step={3}\n      >\n        <div className=\"outer-slide\">\n          <Slider>\n            {reviews &&\n              reviews.map(review => (\n                <Slide key={review.mal_id} index={index++}>\n                  <div className=\"card review-card\">\n                    <div className=\"card-head text-center\">\n                      <img\n                        className=\"review-img\"\n                        src={review.reviewer.image_url}\n                        alt=\"reviewer\"\n                      />\n                      <div className=\"reviewer-name\">\n                        {review.reviewer.username}\n                      </div>\n                    </div>\n\n                    <div className=\"card-body text-center\">\n                      <p>Overall: {review.reviewer.scores.overall}</p>\n                      <p>Story: {review.reviewer.scores.story}</p>\n                      <p>Animation: {review.reviewer.scores.animation}</p>\n                      <p>Sound: {review.reviewer.scores.sound}</p>\n                      <p>Character: {review.reviewer.scores.character}</p>\n                      <p>Enjoyment: {review.reviewer.scores.enjoyment}</p>\n                    </div>\n                    <div\n                      onClick={() =>\n                        openModal(\n                          review.content,\n                          review.reviewer.image_url,\n                          review.reviewer.username,\n                          review.reviewer.scores.overall\n                        )\n                      }\n                      style={{ cursor: \"pointer\" }}\n                      data-target=\"#reviewModal\"\n                      data-toggle=\"modal\"\n                      className=\"card-footer\"\n                    >\n                      <span>Read Review</span>\n                    </div>\n                  </div>\n                </Slide>\n              ))}\n          </Slider>\n\n          <ButtonBack className=\"back-btn\">\n            <i className=\"fas fa-chevron-circle-left icon\" />\n          </ButtonBack>\n          <ButtonNext className=\"next-btn\">\n            <i className=\"fas fa-chevron-circle-right icon\" />\n          </ButtonNext>\n        </div>\n      </CarouselProvider>\n\n      {/** DESKTOP VIEW **/}\n      <CarouselProvider\n        className=\"review-carousel-width d-none d-lg-block\"\n        naturalSlideWidth={500}\n        naturalSlideHeight={1300}\n        totalSlides={reviews && reviews.length}\n        visibleSlides={5}\n        step={5}\n      >\n        <div className=\"outer-slide\">\n          <Slider>\n            {reviews &&\n              reviews.map(review => (\n                <Slide key={review.mal_id} index={index++}>\n                  <div className=\"card review-card\">\n                    <div className=\"card-head text-center\">\n                      <img\n                        className=\"review-img\"\n                        src={review.reviewer.image_url}\n                        alt=\"reviewer\"\n                      />\n                      <div className=\"reviewer-name\">\n                        {review.reviewer.username}\n                      </div>\n                    </div>\n\n                    <div className=\"card-body text-center\">\n                      <p>Overall: {review.reviewer.scores.overall}</p>\n                      <p>Story: {review.reviewer.scores.story}</p>\n                      <p>Animation: {review.reviewer.scores.animation}</p>\n                      <p>Sound: {review.reviewer.scores.sound}</p>\n                      <p>Character: {review.reviewer.scores.character}</p>\n                      <p>Enjoyment: {review.reviewer.scores.enjoyment}</p>\n                    </div>\n                    <div\n                      onClick={() =>\n                        openModal(\n                          review.content,\n                          review.reviewer.image_url,\n                          review.reviewer.username,\n                          review.reviewer.scores.overall\n                        )\n                      }\n                      style={{ cursor: \"pointer\" }}\n                      data-target=\"#reviewModal\"\n                      data-toggle=\"modal\"\n                      className=\"card-footer\"\n                    >\n                      <span>Read Review</span>\n                    </div>\n                  </div>\n                </Slide>\n              ))}\n          </Slider>\n\n          <ButtonBack className=\"back-btn\">\n            <i className=\"fas fa-chevron-circle-left icon\" />\n          </ButtonBack>\n          <ButtonNext className=\"next-btn\">\n            <i className=\"fas fa-chevron-circle-right icon\" />\n          </ButtonNext>\n        </div>\n      </CarouselProvider>\n    </React.Fragment>\n  );\n};\n\nexport default Carousel;\n","import React from \"react\";\nimport Carousel from \"./carousel/Carousel\";\n\n// Index counter for carousel\nlet index = 0;\n\nconst Reviews = ({ reviews, openModal }) => {\n  return (\n    <section id=\"reviews\">\n      <div className=\"container mb-5\">\n        <h1>Reviews</h1>\n        <div className=\"row\">\n          {reviews ? (\n            <Carousel reviews={reviews} openModal={openModal} />\n          ) : (\n            <div>\n              <p>No reviews</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Reviews;\n","import { LOADING } from \"./LoadingType\";\n\nexport const loading = value => dispatch => {\n  dispatch({\n    type: LOADING,\n    payload: value\n  });\n};\n","export const LOADING = \"LOADING\";\n","import React from \"react\";\n\nconst Modal = ({ username, modalContent, userImg, userScore, resetModal }) => {\n  return (\n    <div\n      class=\"modal fade\"\n      id=\"reviewModal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"reviewModal\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <img\n              style={{ height: \"70px\", width: \"70px\", borderRadius: \"50%\" }}\n              src={userImg}\n              alt=\"user image\"\n            />\n            <div className=\"modal-username\">{username}</div>\n            <div className=\"modal-userscore\">Rating: {userScore}</div>\n            <button\n              onClick={() => resetModal()}\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            {!modalContent ? (\n              <div className=\"text-danger\">\n                Oops, something went wrong, please try again.\n              </div>\n            ) : (\n              <div\n                className=\"display-linebreak\"\n                dangerouslySetInnerHTML={{\n                  __html: modalContent\n                }}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport Swiper from \"react-id-swiper\";\nimport { NavLink } from \"react-router-dom\";\n\n// Params for carousel\nconst params = {\n  effect: \"coverflow\",\n  grabCursor: true,\n  centeredSlides: true,\n  slidesPerView: \"auto\",\n  coverflowEffect: {\n    rotate: 50,\n    stretch: 0,\n    depth: 100,\n    modifier: 1,\n    slideShadows: true,\n    type: \"none\"\n  },\n  pagination: {\n    el: \".swiper-pagination\",\n    type: \"fraction\"\n  },\n  navigation: {\n    nextEl: \".swiper-button-next\",\n    prevEl: \".swiper-button-prev\"\n  }\n};\n\nconst RelatedAnime = ({ animeRelated }) => {\n  return (\n    <section id=\"related-anime\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h1 className=\"mb-5\">Adaptations</h1>\n            <Swiper {...params} shouldSwiperUpdate>\n              {animeRelated.map(anime => (\n                <div style={{ width: \"40%\" }} className=\"card\">\n                  <NavLink\n                    className=\"nav-link\"\n                    to={`/anime/${anime.mal_id}_${anime.type}`}\n                  >\n                    <img\n                      src={anime.image_url}\n                      alt=\"\"\n                      className=\"anime-card-img\"\n                    />\n                  </NavLink>\n                  <div className=\"card-body\">\n                    <h6 className=\"card-title text-center font-weight-bold\">\n                      {anime.title}\n                    </h6>\n                    <div style={{ fontWeight: \"bold\" }}>{anime.type}</div>\n                  </div>\n                </div>\n              ))}\n            </Swiper>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default RelatedAnime;\n","import React, { Component } from \"react\";\nimport {\n  getAnimeDetails,\n  getAnimeReview,\n  relatedAnime,\n  resetAnimeProps\n} from \"../../redux/reducers/actions/AnimeActions\";\nimport LeftHandView from \"./LeftHandView\";\nimport RightHandView from \"./RightHandView\";\nimport Synopsis from \"./Synopsis\";\nimport Reviews from \"./reviews/Reviews\";\nimport Loading from \"../../components/loading/Loading\";\nimport { loading } from \"../../redux/reducers/loading/LoadingActions\";\nimport Modal from \"../modal/Modal\";\nimport RelatedAnime from \"./RelatedAnime\";\nimport { connect } from \"react-redux\";\n\nclass AnimeView extends Component {\n  state = {\n    modalContent: null,\n    userImg: null,\n    username: null,\n    userScore: null\n  };\n\n  componentDidMount() {\n    const { getAnimeDetails, getAnimeReview } = this.props;\n\n    let id = this.props.match.params.id.split(\"_\")[0],\n      type = this.props.match.params.id.split(\"_\")[1];\n    if (type === \"Manga\" || type === \"Novel\" || type === \"One-shot\") {\n      type = \"manga\";\n    } else {\n      type = \"anime\";\n    }\n\n    getAnimeDetails(id, type);\n    getAnimeReview(id, type);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { currentAnime, relatedAnime, loading } = this.props;\n    const id = [];\n    if (\n      currentAnime &&\n      currentAnime.related &&\n      this.props.animeRelated.length === 0\n    ) {\n      Object.values(currentAnime.related).forEach(arr =>\n        arr.forEach(x =>\n          id.push({\n            id: x.mal_id,\n            type: x.type\n          })\n        )\n      );\n      relatedAnime(id);\n      loading(true);\n    }\n\n    // Reload page when params change\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      window.location.reload();\n    }\n  }\n\n  // Clear props for related anime when component unmounts\n  componentWillUnmount() {\n    const { resetAnimeProps } = this.props;\n    resetAnimeProps();\n  }\n\n  // Selected modal content to display\n  openModal = (content, userImg, username, userScore) => {\n    const review = content.replace(/\\\\n/gi, \"<br>\");\n    this.setState({ modalContent: review, userImg, username, userScore });\n  };\n\n  // Reset Modal\n  resetModal = () => {\n    this.setState({\n      modalContent: null,\n      userImg: null,\n      username: null,\n      userScore: null\n    });\n  };\n\n  render() {\n    const { currentAnime, reviews, animeRelated, isLoading } = this.props;\n    const { modalContent, userImg, username, userScore } = this.state;\n\n    return (\n      <React.Fragment>\n        <section id=\"anime-view-top\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <LeftHandView currentAnime={currentAnime} />\n              <RightHandView currentAnime={currentAnime} />\n            </div>\n          </div>\n        </section>\n        <Synopsis currentAnime={currentAnime} />\n        <Reviews reviews={reviews} openModal={this.openModal} />\n        <Modal\n          modalContent={modalContent}\n          userImg={userImg}\n          username={username}\n          userScore={userScore}\n          resetModal={this.resetModal}\n        />\n        {isLoading ? <Loading /> : <RelatedAnime animeRelated={animeRelated} />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentAnime: state.getTop.currentAnime,\n  reviews: state.getTop.reviews,\n  animeRelated: state.getTop.relatedAnime,\n  isLoading: state.isLoading.loading\n});\n\nconst actions = {\n  getAnimeDetails,\n  getAnimeReview,\n  relatedAnime,\n  resetAnimeProps,\n  loading\n};\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(AnimeView);\n","import {\n  GET_TOP_ANIME,\n  GET_TOP_MANGA,\n  GET_ANIME_DETAILS,\n  GET_ANIME_REVIEWS,\n  SEARCH_ANIME,\n  SEARCH_MANGA,\n  RELATED_ANIME,\n  RESET_ANIME_PROPS\n} from \"./actions/AnimeTypes\";\n\nconst initialState = {\n  topAnime: [],\n  topManga: [],\n  currentAnime: [],\n  reviews: [],\n  animeSearch: [],\n  mangaSearch: [],\n  relatedAnime: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_TOP_ANIME:\n      return {\n        ...state,\n        topAnime: action.payload\n      };\n\n    case GET_TOP_MANGA:\n      return {\n        ...state,\n        topManga: action.payload\n      };\n\n    case GET_ANIME_DETAILS:\n      return {\n        ...state,\n        currentAnime: action.payload\n      };\n\n    case GET_ANIME_REVIEWS:\n      return {\n        ...state,\n        reviews: action.payload\n      };\n    case SEARCH_ANIME:\n      return {\n        ...state,\n        animeSearch: action.payload\n      };\n\n    case SEARCH_MANGA:\n      return {\n        ...state,\n        mangaSearch: action.payload\n      };\n\n    case RESET_ANIME_PROPS:\n      return {\n        ...state,\n        currentAnime: action.payload,\n        reviews: action.payload,\n        relatedAnime: action.payload\n      };\n\n    case RELATED_ANIME:\n      return {\n        ...state,\n        relatedAnime: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { LOADING } from \"./LoadingType\";\n\nconst initialState = {\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport getTopAnime from \"./getTopAnimeReducer\";\nimport loading from \"./loading/LoadingReducer\";\n\nexport default combineReducers({\n  getTop: getTopAnime,\n  isLoading: loading\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = [],\n  middleware = [thunk];\n\n// Create store\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(composeWithDevTools(applyMiddleware(...middleware)))\n);\n\nexport default store;\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navigation = () => {\n  return (\n    <nav\n      id=\"mobile-nav\"\n      className=\"navbar navbar-expand-lg navbar-dark bg-dark py-4 sticky-top\"\n    >\n      <div className=\"container\">\n        <a href=\"#\" className=\"navbar-brand\">\n          <h3>Anime Search</h3>\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li\n              data-toggle=\"collapse\"\n              data-target=\"#navbarNav\"\n              className=\"nav-item\"\n            >\n              <NavLink to=\"/\" id=\"top-anime-menu\">\n                Top Anime\n              </NavLink>\n            </li>\n            <li\n              data-toggle=\"collapse\"\n              data-target=\"#navbarNav\"\n              className=\"nav-item\"\n            >\n              <NavLink to=\"/search-anime\" id=\"search-anime-menu\">\n                Anime Search\n              </NavLink>\n            </li>\n            <li\n              data-toggle=\"collapse\"\n              data-target=\"#navbarNav\"\n              className=\"nav-item\"\n            >\n              <NavLink to=\"/search-manga\" id=\"search-manga-menu\">\n                Manga Search\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavigationDesktop = () => {\n  return (\n    <nav id=\"side-navigation\">\n      <div className=\"sidebar-header\">\n        <h3>Anime Search</h3>\n      </div>\n      <ul className=\"list-unstyled components\">\n        <li>\n          <Link to=\"/\" id=\"top-anime-menu\">\n            Top Anime\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/search-anime\" id=\"search-anime-menu\">\n            Anime Search\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/search-manga\" id=\"search-manga-menu\">\n            Manga Search\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavigationDesktop;\n","import React from \"react\";\n\nconst AnimeSearch = ({ searchValue, handleSearchChange, searchAnime }) => {\n  return (\n    <section id=\"anime-search\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"input-group input-group-lg\">\n            <input\n              autoFocus\n              value={searchValue}\n              onChange={handleSearchChange}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search Anime\"\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-primary\"\n                type=\"submit\"\n                onClick={searchAnime}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default AnimeSearch;\n","import React from \"react\";\nimport Swiper from \"react-id-swiper\";\nimport { NavLink } from \"react-router-dom\";\n\n// Params for carousel\nconst params = {\n  effect: \"coverflow\",\n  grabCursor: true,\n  centeredSlides: true,\n  slidesPerView: \"auto\",\n  coverflowEffect: {\n    rotate: 50,\n    stretch: 0,\n    depth: 100,\n    modifier: 1,\n    slideShadows: true,\n    type: \"none\"\n  },\n  pagination: {\n    el: \".swiper-pagination\",\n    type: \"fraction\"\n  },\n  navigation: {\n    nextEl: \".swiper-button-next\",\n    prevEl: \".swiper-button-prev\"\n  }\n};\n\nconst SearchDisplay = ({ searchedAnime, isLoading }) => {\n  return (\n    <section id={searchedAnime.length !== 0 ? \"search-display\" : \"\"}>\n      <div className=\"container\">\n        <div className=\"row\">\n          <Swiper {...params} shouldSwiperUpdate>\n            {searchedAnime.map(anime => (\n              <div style={{ width: \"40%\" }} className=\"card\">\n                <NavLink\n                  className=\"nav-link\"\n                  to={`/anime/${anime.mal_id}_${anime.type}`}\n                >\n                  <img\n                    src={anime.image_url}\n                    alt=\"\"\n                    className=\"anime-card-img\"\n                  />\n                </NavLink>\n                <div className=\"card-body\">\n                  <h6 className=\"card-title text-center font-weight-bold\">\n                    {anime.title}\n                  </h6>\n                  <div style={{ fontWeight: \"bold\" }}>{anime.type}</div>\n                </div>\n              </div>\n            ))}\n          </Swiper>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SearchDisplay;\n","import React, { Component } from \"react\";\nimport AnimeSearch from \"../homepage/AnimeSearch\";\nimport SearchDisplay from \"../homepage/SearchDisplay\";\nimport Loading from \"../loading/Loading\";\nimport { animeSearch } from \"../../redux/reducers/actions/AnimeActions\";\nimport { loading } from \"../../redux/reducers/loading/LoadingActions\";\nimport { connect } from \"react-redux\";\n\nclass AnimeSearchPage extends Component {\n  state = {\n    searchValue: \"\"\n  };\n\n  handleSearchChange = e => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  searchAnime = e => {\n    e.preventDefault();\n\n    const { animeSearch, loading } = this.props,\n      { searchValue } = this.state;\n    // Change Loading status to true\n    loading(true);\n    animeSearch(searchValue);\n    // Reset input form field\n    this.setState({\n      searchValue: \"\"\n    });\n  };\n\n  render() {\n    const { searchedAnime, isLoading } = this.props,\n      { searchValue } = this.state;\n    return (\n      <React.Fragment>\n        <div id=\"banner\">\n          <div id=\"overlay\" />\n        </div>\n\n        {/** ANIME SEARCH DISPLAY **/}\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <SearchDisplay searchedAnime={searchedAnime} isLoading={isLoading} />\n        )}\n        {/** SEARCH ANIME **/}\n        <AnimeSearch\n          searchValue={searchValue}\n          handleSearchChange={this.handleSearchChange}\n          searchAnime={this.searchAnime}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchedAnime: state.getTop.animeSearch,\n  isLoading: state.isLoading.loading\n});\n\nconst actions = {\n  animeSearch,\n  loading\n};\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(AnimeSearchPage);\n","import React from \"react\";\n\nconst MangaSearch = ({ searchValue, handleSearchChange, searchManga }) => {\n  return (\n    <section id=\"anime-search\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"input-group input-group-lg\">\n            <input\n              autoFocus\n              value={searchValue}\n              onChange={handleSearchChange}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search Manga\"\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-primary\"\n                type=\"submit\"\n                onClick={searchManga}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default MangaSearch;\n","import React, { Component } from \"react\";\nimport MangaSearch from \"./MangaSearch\";\nimport SearchDisplay from \"../homepage/SearchDisplay\";\nimport Loading from \"../loading/Loading\";\nimport { mangaSearch } from \"../../redux/reducers/actions/AnimeActions\";\nimport { loading } from \"../../redux/reducers/loading/LoadingActions\";\nimport { connect } from \"react-redux\";\n\nclass MangaSearchPage extends Component {\n  state = {\n    searchValue: \"\"\n  };\n\n  handleSearchChange = e => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  searchManga = e => {\n    e.preventDefault();\n\n    const { mangaSearch, loading } = this.props,\n      { searchValue } = this.state;\n    // Change Loading status to true\n    loading(true);\n    mangaSearch(searchValue);\n    // Reset input form field\n    this.setState({\n      searchValue: \"\"\n    });\n  };\n\n  render() {\n    const { searchedManga, isLoading } = this.props,\n      { searchValue } = this.state;\n    return (\n      <React.Fragment>\n        <div id=\"banner\">\n          <div id=\"overlay\" />\n        </div>\n        {/** MAnga SEARCH DISPLAY **/}\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <SearchDisplay searchedAnime={searchedManga} isLoading={isLoading} />\n        )}\n        {/** SEARCH ANIME **/}\n        <MangaSearch\n          searchValue={searchValue}\n          handleSearchChange={this.handleSearchChange}\n          searchManga={this.searchManga}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchedManga: state.getTop.mangaSearch,\n  isLoading: state.isLoading.loading\n});\n\nconst actions = {\n  mangaSearch,\n  loading\n};\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(MangaSearchPage);\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <section id=\"footer\">\n        <span>&copy; 2019</span>\n      </section>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport HomePage from \"./components/homepage/HomePage\";\nimport AnimeView from \"./components/animeview/AnimeView\";\nimport store from \"./redux/store\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport ScrollToTop from \"./common/ScrollToTop\";\nimport NavigationMobile from \"./components/navigation/NavigationMobile\";\nimport NavigationDesktop from \"./components/navigation/NavigationDesktop\";\nimport AnimeSearchPage from \"./components/animesearch/AnimeSearchPage\";\nimport MangaSearchPage from \"./components/mangasearch/MangaSearchPage\";\nimport Footer from \"./components/footer/Footer\";\nimport index from \"./index.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router basename=\"/animesearch\">\n        <ScrollToTop>\n          <div className=\"App page-content\">\n            <div className=\"d-none d-md-block\">\n              <NavigationDesktop />\n            </div>\n            <div className=\"d-md-none d-block\">\n              <NavigationMobile />\n            </div>\n            <div className=\"wrapper\">\n              <Route exact path=\"/\" component={HomePage} />\n              <Switch>\n                <Route exact path=\"/anime/:id\" component={AnimeView} />\n                <Route exact path=\"/search-anime\" component={AnimeSearchPage} />\n                <Route exact path=\"/search-manga\" component={MangaSearchPage} />\n              </Switch>\n            </div>\n          </div>\n          <Footer />\n        </ScrollToTop>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}